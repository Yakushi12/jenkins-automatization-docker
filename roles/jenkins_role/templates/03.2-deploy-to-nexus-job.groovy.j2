#!groovy

import javaposse.jobdsl.dsl.DslScriptLoader
import javaposse.jobdsl.plugin.JenkinsJobManagement
import jenkins.model.Jenkins
import javaposse.jobdsl.dsl.DslFactory.*

// def jobDSL="""
// pipelineJob('{{ jobName }}') {
//   definition {
//     cpsScm {
//       scm {
//         git {
//           remote {
//             url('{{ gitUrl }}')
//             credentials('{{ credentials }}')
//           }
//        branch('{{ branch }}')
//        }
//      }
//     lightweight()
//    }
//   }
// }
// """;
def jobDSL="""
pipelineJob('deploy') {
  authenticationToken({{ auth_token }})
  definition {
    cps {
      script(readFileFromWorkspace('/usr/share/jenkins/ref/init.groovy.d/Jenkinsfile-03.2'))
      sandbox(true)
    }
  }
  logRotator(7, -1, -1, -1)
}
""";
// Create the configuration job interface from a jobDSL script
def jobManagement = new JenkinsJobManagement(System.out, [:], new File('.'))
new DslScriptLoader(jobManagement).runScript(jobDSL)

// Approve script
def scriptApproval = org.jenkinsci.plugins.scriptsecurity.scripts.ScriptApproval.get()

String[] signs = [
    "method org.jenkinsci.plugins.workflow.steps.FlowInterruptedException getCauses",
    "method org.jenkinsci.plugins.workflow.support.steps.input.Rejection getUser"
    ]

for( String sign : signs ) {
    scriptApproval.approveSignature(sign)
}

scriptApproval.save()
//def workspace = new File('.')
// def jobManagement = new JenkinsJobManagement(System.out, [:], workspace) // replaced by 37 line
