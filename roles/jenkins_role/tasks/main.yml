---

  - name: Check Hostname
    command: hostname
    register: hname
    tags: always

  - debug: msg="{{ hname.stdout }}"
    tags: always

  # - name: Add user dzakharchenko to docker group
  #   user:
  #     name: dzakharchenko
  #     groups: docker
  #     append: true

  - name: Download n unarchive packer
    unarchive:
      src: https://releases.hashicorp.com/packer/1.6.1/packer_1.6.1_linux_amd64.zip
      dest: /usr/local/bin
      remote_src: yes
    tags: jenkins-install

  - name: Allow all access to tcp port 8080
    firewalld:
      port: 8080/tcp
      permanent: yes
      state: enabled
      zone: public
    tags: jenkins-install

  - name: reload service firewalld
    systemd:
      name: firewalld
      state: reloaded
    tags: jenkins-install

#Jenkins configure
  - name: Creates Docker directory
    file:
      path: ./Docker/scripts/
      state: directory
      owner: '{{ ansible_user }}'
      group: '{{ ansible_user }}'
      directory_mode: yes
    tags: jenkins-configure

  - name: Copy jenkins plugins file
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: '{{ ansible_user }}'
      group: '{{ ansible_user }}'
      mode: '0744'
    with_items:
      - { src: 'jenkins-plugins', dest: './Docker/jenkins-plugins' }
    #  - { src: '/Users/dzakharchenko/WhoAmI/gcp/service_acc_key.json', dest: '/home/{{ ansible_user }}/account.json' }

    tags: jenkins-configure

  - name: Set templates to Docker directory
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: '{{ ansible_user }}'
      group: '{{ ansible_user }}'
    with_items:
      - { src: 'Dockerfile.j2', dest: './Docker/Dockerfile' }
      - { src: '00-basic-security.groovy.j2', dest: './Docker/scripts/00-basic-security.groovy' }
      - { src: '01-global-settings.groovy.j2', dest: './Docker/scripts/01-global-settings.groovy' }
      - { src: '02-add-credentials.groovy.j2', dest: './Docker/scripts/02-add-credentials.groovy' }
      - { src: '03.1-packer-build-job.groovy.j2', dest: './Docker/scripts/03.1-packer-build-job.groovy' }
      - { src: '03.2-deploy-to-nexus-job.groovy.j2', dest: './Docker/scripts/03.2-deploy-to-nexus-job.groovy' }
      - { src: '04-maven.groovy.j2', dest: './Docker/scripts/04-maven.groovy' }
      - { src: 'Jenkinsfile-03.1.j2', dest: './Docker/scripts/Jenkinsfile-03.1' }
      - { src: 'Jenkinsfile-03.2.j2', dest: './Docker/scripts/Jenkinsfile-03.2' }
      - { src: 'Jenkinsfile-03.3.j2', dest: './Docker/scripts/Jenkinsfile-03.3' }
      - { src: '03.3-terraform-job.groovy.j2', dest: './Docker/scripts/03.3-terraform-job.groovy' }
    tags: jenkins-configure

  # - name: pull an image
  #   docker_image:
  #     name: yakushi12/jenkins-docker
  #     source: pull
  #     tag: "1.0"
  #   tags: jenkins-configure
  #
  # - name: Create a docker container
  #   docker_container:
  #     name: jenkins3
  #     image: yakushi12/jenkins-docker:1.0
  #     state: started
  #     restart_policy: "unless-stopped"
  #     volumes:
  #       - /usr/jenkins_home:/var/jenkins_home
  #     ports:
  #       - "0.0.0.0:8080:8080"
  #       - "0.0.0.0:50000:50000"
  #     exposed_ports:
  #     - 8080
  #     - 50000
  #   tags: jenkins-configure

  - name: Create Jenkins-home dir
    file:
      path: /home/{{ ansible_user }}/{{ docker_volume }}
      state: directory
      mode: "1755"
      directory_mode: yes
      owner: '{{ ansible_user }}'
      group: '{{ ansible_user }}'
      recurse: yes
    tags: jenkins-configure

  - name: Build image n run container
    tags: jenkins-configure
    shell: |
      docker build -t {{ docker_image_name }} ./Docker/.
      docker run -d --privileged --name {{ docker_container_name }} -p 0.0.0.0:8080:8080 -p 0.0.0.0:50000:50000 -v /home/{{ ansible_user }}/{{ docker_volume }}:/var/{{ docker_volume }} {{ docker_image_name }}


  - name: Build Jenkins job
    tags: build-job
    uri:
      url: "http://{{ jenkins_url }}:{{ jenkins_port }}/buildByToken/build?job={{ jobName }}&token={{ jenkins_token }}"
        # "http://{{ jenkins.host }}/job/{{ jenkins.job }}/build?token={{ jenkins.token }}"
      method: POST
      # user: "{{ jenkins.user }}"
      # password: "{{ jenkins.password }}"
      force_basic_auth: yes
      status_code: 201

# docker pull yakushi12/jenkins-docker
# docker run -d --restart unless-stopped --name jenkins -p 0.0.0.0:8080:8080 -p 0.0.0.0:50000:50000 -v /usr/jenkins_home:/var/jenkins_home yakushi12/jenkins-docker
  # - name: Build Docker image
  #   docker_image:
  #     name: jenkins-docker
  #     build:
  #       path: ./Docker
  #       # tag: jenkins
  #       args:
  #         log_volume: /var/log/jenkins
  #         listen_port: 8080
  #     source: build
  #

  # - name: Provision Ansible for packer
  #   copy:
  #     src: Ansible
  #     dest: /home/{{ ansible_user }}/{{ docker_volume }}/workspace/packer_build
  #     directory_mode: yes
  #     mode: '1755'
  #     owner: '{{ ansible_user }}'
  #     group: '{{ ansible_user }}'
  #   tags: jenkins-configure
  #
  # - name: Provision account.json for packer
  #   copy:
  #     src: /Users/dzakharchenko/WhoAmI/gcp/service_acc_key.json
  #     dest: /home/dzakharchenko/jenkins_home/workspace/packer_build/Ansible/account.json
  #     mode: '0755'
  #     owner: '{{ ansible_user }}'
  #     group: '{{ ansible_user }}'
  #   tags: jenkins-configure

#  - command: 'sudo docker cp /usr/local/bin/packer jenkins:/usr/local/bin/packer'
...
