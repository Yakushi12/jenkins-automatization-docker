#!groovy

import com.cloudbees.jenkins.plugins.sshcredentials.impl.*
import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.common.*
import com.cloudbees.plugins.credentials.domains.Domain
import com.cloudbees.plugins.credentials.impl.*
import hudson.util.Secret
import java.nio.file.*
import jenkins.model.Jenkins
import net.sf.json.JSONObject
import org.jenkinsci.plugins.plaincredentials.*
import org.jenkinsci.plugins.plaincredentials.impl.*
import org.apache.commons.fileupload.FileItem


Jenkins jenkins = Jenkins.getInstance()
def domain = Domain.global()
def store = jenkins.getExtensionList('com.cloudbees.plugins.credentials.SystemCredentialsProvider')[0].getStore()


// ----- SSH Private Key Credential ------ //

def jenkinsSSHcredentials = [
  id:           '{{ credentials }}',
  userName:     '{{ jenkins_user }}',
  description:  '{{ jenkinsSSHcredentials_description }}',
  key:          new BasicSSHUserPrivateKey.DirectEntryPrivateKeySource('''{{ private_key }}''')
]

def privateKey = new BasicSSHUserPrivateKey(
  CredentialsScope.GLOBAL,
  jenkinsSSHcredentials.id,
  jenkinsSSHcredentials.userName,
  jenkinsSSHcredentials.key,
  null,
  jenkinsSSHcredentials.description
)

// ----- Username and Password Credential ------ //

def jenkinsKey = [
  id:           '{{ jenkinsKey_id }}',
  description:  '{{ jenkinsKey_description }}',
  userName:     '{{ jenkinsKey_user }}',
  password:     '{{ jenkinsKey_pass }}'
]

def jenkinsUserPass = new UsernamePasswordCredentialsImpl(
  CredentialsScope.GLOBAL,
  jenkinsKey.id,
  jenkinsKey.description,
  jenkinsKey.userName,
  jenkinsKey.password
)

  // ----- Secret File (vault pass) ------ //

  def secretFile2 = [
    id:           '{{ valut_pass_id }}',
    description:  '{{ valut_pass_description }}',
    fileName:     '{{ valut_pass_name }}'
  ]

  String file_content2 = "{{ valut_pass }}"
  def secretBytes2 = SecretBytes.fromBytes(file_content2.getBytes())
  def secret_file2 = new FileCredentialsImpl(
    CredentialsScope.GLOBAL,
    secretFile2.id,
    secretFile2.description,
    secretFile2.fileName,
    secretBytes2)

store.addCredentials(domain, privateKey)
store.addCredentials(domain, jenkinsUserPass)
store.addCredentials(domain, secret_file)
store.addCredentials(domain, secret_file2)

jenkins.save()
